# 神经网络
# 神经网络和感知机有很多相似之处，用图像表示神经网络可以分为三层
# 1，输入层--->2，中间层-->3,输出层
# 中间层也被称为隐藏层
# 复习感知机
# 感知机分为输入信号输出信号和权重偏置，用数学表达公式显示为b代表偏置，x1，x2代表输入信号，w1,w2代表权重，y代表输出信号
# y = {0  (b+x1w1 + x2w2) <= 0
# y = {1  (b+x1w1 + x2w2) > 0
# 通过上述公司我们可以进行改进简化该公式
# y=h(b+x1w1 + x2w2)
# h(x){0 (x<=0)
#     {1 (x>0)
# -----------------------------------------------------------
# 上述的简化公式中h(x)函数会将输入信号的转换为输出信号，这种函数被称为激活函数
# 拆分一下上面的简化公式
#  x = b(偏置) + x1w1+x2w2   计算权重总和和偏置总和
#  y =h(x)   通过h()函数将函数x转为y进行输出
# 激活函数的计算过程
# 偏置-----------        总和    
# x1---------权重w1      总和       输入信号和偏置总和相加通过---->h(sum)函数计算---->最终得到的输出信号
# x2---------权重w2      总和
# 激活函数中以阈值为界限，一旦输入超过了阈值，就会切换输出，这样的函数称为阶跃函数
# 阶跃函数的图形化表现
import numpy as np
import matplotlib.pylab as plt
def step_function(x):
    return np.array(x>0,dtype=int)

x = np.arange(-5.0,5.0,0.1) # 范围-5.0到5.0 以0.1为单位，生成numpy数组
y = step_function(x)
plt.plot(x,y)
plt.ylim(-0.1,1.1) # 指定y轴的范围
plt.show()


